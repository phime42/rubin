var search_data = {"index":{"searchIndex":["rbnacl","restapi","cryptobox","databasebox","encryptedadapter","relaychat","starter","check_for_revocation()","connect()","encrypt_string()","generate_a_keypair()","generate_keypair()","host_encrypt_string()","new()","new()","new()","new()","new()","new()","output_all_clients()","output_all_keys()","output_all_message_ids_by_key_id()","output_host_keypair()","output_message_by_days()","output_new_message_ids()","read_messages_by_id()","register_key()","register_new_client()","revoke_key()","send_to_channel()","send_to_user()","testing_generate_receiving_keypair()","write_encrypted_message()","write_message_to_database()","gemfile","gemfile.lock","readme","cryptobox.html","databasebox.html","encryptedadapter.html","gemfile.html","gemfile_lock.html","readme_md.html","rbnacl.html","relaychat.html","starter.html","created.rid","created_rid.html","index.html","darkfish.js","jquery.js","navigation.js","search.js","search_index.js","searcher.js","rdoc.css","table_of_contents.html"],"longSearchIndex":["rbnacl","restapi","restapi::cryptobox","restapi::databasebox","restapi::encryptedadapter","restapi::relaychat","starter","restapi::databasebox#check_for_revocation()","restapi::relaychat#connect()","restapi::cryptobox#encrypt_string()","restapi::cryptobox#generate_a_keypair()","restapi::cryptobox#generate_keypair()","restapi::cryptobox#host_encrypt_string()","restapi::new()","restapi::cryptobox::new()","restapi::databasebox::new()","restapi::encryptedadapter::new()","restapi::relaychat::new()","starter::new()","restapi::databasebox#output_all_clients()","restapi::databasebox#output_all_keys()","restapi::databasebox#output_all_message_ids_by_key_id()","restapi::databasebox#output_host_keypair()","restapi::databasebox#output_message_by_days()","restapi::databasebox#output_new_message_ids()","restapi::databasebox#read_messages_by_id()","restapi::databasebox#register_key()","restapi::databasebox#register_new_client()","restapi::databasebox#revoke_key()","restapi::relaychat#send_to_channel()","restapi::relaychat#send_to_user()","restapi::cryptobox#testing_generate_receiving_keypair()","restapi::encryptedadapter#write_encrypted_message()","restapi::databasebox#write_message_to_database()","","","","","","","","","","","","","","","","","","","","","","",""],"info":[["RbNaCl","","RbNaCl.html","",""],["RestApi","","RestApi.html","",""],["RestApi::CryptoBox","","RestApi/CryptoBox.html","","<p>The class CryptoBox poses as a generic adapter for cryptographic services.\nIt uses the NaCl library by …\n"],["RestApi::DatabaseBox","","RestApi/DatabaseBox.html","",""],["RestApi::EncryptedAdapter","","RestApi/EncryptedAdapter.html","",""],["RestApi::RelayChat","","RestApi/RelayChat.html","","<p>This module opens an IRC connection and saves all the raw irc data to the\ndatabase\n"],["Starter","","Starter.html","","<p>manages the startup of all bots and clients\n"],["check_for_revocation","RestApi::DatabaseBox","RestApi/DatabaseBox.html#method-i-check_for_revocation","(key_id)",""],["connect","RestApi::RelayChat","RestApi/RelayChat.html#method-i-connect","()","<p>connects to the given irc channel\n"],["encrypt_string","RestApi::CryptoBox","RestApi/CryptoBox.html#method-i-encrypt_string","(string_to_encrypt, sender_private_key, receiver_public_key)","<p>Encrypts a given string with the given receiver public key and signs the\nmessage with a given private …\n"],["generate_a_keypair","RestApi::CryptoBox","RestApi/CryptoBox.html#method-i-generate_a_keypair","()","<p>Generates a new NaCl keypair, but does not touch instance variables.\n"],["generate_keypair","RestApi::CryptoBox","RestApi/CryptoBox.html#method-i-generate_keypair","()","<p>Generates a new NaCl keypair also sets the @public_key and @private_key\ninstance variables Due to the …\n"],["host_encrypt_string","RestApi::CryptoBox","RestApi/CryptoBox.html#method-i-host_encrypt_string","(string_to_encrypt, receiver_public_key)","<p>Encrypts a given string with the given pubkey, signed with the host keypair\n"],["new","RestApi","RestApi.html#method-c-new","()",""],["new","RestApi::CryptoBox","RestApi/CryptoBox.html#method-c-new","()",""],["new","RestApi::DatabaseBox","RestApi/DatabaseBox.html#method-c-new","()",""],["new","RestApi::EncryptedAdapter","RestApi/EncryptedAdapter.html#method-c-new","()",""],["new","RestApi::RelayChat","RestApi/RelayChat.html#method-c-new","(server, port, channel, nick)",""],["new","Starter","Starter.html#method-c-new","()",""],["output_all_clients","RestApi::DatabaseBox","RestApi/DatabaseBox.html#method-i-output_all_clients","()","<p>reads the client table and outputs all clients as an array\n"],["output_all_keys","RestApi::DatabaseBox","RestApi/DatabaseBox.html#method-i-output_all_keys","()",""],["output_all_message_ids_by_key_id","RestApi::DatabaseBox","RestApi/DatabaseBox.html#method-i-output_all_message_ids_by_key_id","(key_id)",""],["output_host_keypair","RestApi::DatabaseBox","RestApi/DatabaseBox.html#method-i-output_host_keypair","()",""],["output_message_by_days","RestApi::DatabaseBox","RestApi/DatabaseBox.html#method-i-output_message_by_days","(key_id, days)",""],["output_new_message_ids","RestApi::DatabaseBox","RestApi/DatabaseBox.html#method-i-output_new_message_ids","(key_id, message_id)",""],["read_messages_by_id","RestApi::DatabaseBox","RestApi/DatabaseBox.html#method-i-read_messages_by_id","(message_id, key_id)","<p>searches for the message with id = message_id and key_id = key_id\n"],["register_key","RestApi::DatabaseBox","RestApi/DatabaseBox.html#method-i-register_key","(description, host, private_key, public_key)",""],["register_new_client","RestApi::DatabaseBox","RestApi/DatabaseBox.html#method-i-register_new_client","(description, host, type, nick, realname, channel)",""],["revoke_key","RestApi::DatabaseBox","RestApi/DatabaseBox.html#method-i-revoke_key","(public_key, key_id)",""],["send_to_channel","RestApi::RelayChat","RestApi/RelayChat.html#method-i-send_to_channel","(message)",""],["send_to_user","RestApi::RelayChat","RestApi/RelayChat.html#method-i-send_to_user","(user, message)",""],["testing_generate_receiving_keypair","RestApi::CryptoBox","RestApi/CryptoBox.html#method-i-testing_generate_receiving_keypair","()","<p>Generates a keypair in order to receive messages. For testing only.\n"],["write_encrypted_message","RestApi::EncryptedAdapter","RestApi/EncryptedAdapter.html#method-i-write_encrypted_message","(timestamp, client, private_bool, sender, message, attachment)",""],["write_message_to_database","RestApi::DatabaseBox","RestApi/DatabaseBox.html#method-i-write_message_to_database","(timestamp, client, private, sender, message, attachment, key_id)","<p>write the message from the client application to the database\n"],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39; gem &#39;rbnacl-libsodium&#39; gem\n&#39;sequel&#39; gem &#39;sqlite3&#39; …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  ffi (1.9.8)\n  irc-socket (1.0.1)\n  irc_parser (0.1.2)\n  openssl ...</pre>\n"],["README","","README_md.html","","<p>rubin\n<p>{Build Status]\n{Code Climate]\n{Dependency Status\nAn IRC/E-Mail/XMPP\ncollector backend written in ...\n"],["CryptoBox.html","","doc/CryptoBox_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["DatabaseBox.html","","doc/DatabaseBox_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["EncryptedAdapter.html","","doc/EncryptedAdapter_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Gemfile.html","","doc/Gemfile_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Gemfile_lock.html","","doc/Gemfile_lock_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["README_md.html","","doc/README_md_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["RbNaCl.html","","doc/RbNaCl_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["RelayChat.html","","doc/RelayChat_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["Starter.html","","doc/Starter_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["created.rid","","doc/created_rid.html","","<p>Wed, 08 Apr 2015 14:45:36 +0200 ./classes.rb    Wed, 08 Apr 2015 14:36:52\n+0200 ./doc/created.rid    …\n"],["created_rid.html","","doc/doc/created_rid_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["index.html","","doc/index_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"],["darkfish.js","","doc/js/darkfish_js.html","","\n<pre>Darkfish Page Functions\n$Id: darkfish.js 53 2009-01-07 02:52:03Z deveiant $\n\nAuthor: Michael Granger ...</pre>\n"],["jquery.js","","doc/js/jquery_js.html","","\n<pre>!\n jQuery JavaScript Library v1.6.2\n http://jquery.com/\n\n Copyright 2011, John Resig\n Dual licensed under ...</pre>\n"],["navigation.js","","doc/js/navigation_js.html","","\n<pre>Navigation allows movement using the arrow keys through the search results.\n\nWhen using this library ...</pre>\n"],["search.js","","doc/js/search_js.html","","<p>Search = function(data, input, result) {\n\n<pre>this.data = data;\nthis.$input = $(input);\nthis.$result = $(result); ...</pre>\n"],["search_index.js","","doc/js/search_index_js.html","","<p>var search_data =\n{“index”:{“searchIndex”:,“longSearchIndex”:,“info”:[[“CryptoBox”,“”,“CryptoBox.html”,“”,“&lt;p&gt;The\n…\n"],["searcher.js","","doc/js/searcher_js.html","","<p>Searcher = function(data) {\n\n<pre>this.data = data;\nthis.handlers = [];</pre>\n<p>}\n"],["rdoc.css","","doc/rdoc_css.html","","\n<pre>&quot;Darkfish&quot; Rdoc CSS\n$Id: rdoc.css 54 2009-01-27 01:09:48Z deveiant $\n\nAuthor: Michael Granger &lt;ged@FaerieMUD.org&gt; ...</pre>\n"],["table_of_contents.html","","doc/table_of_contents_html.html","","<p>&lt;!DOCTYPE html&gt;\n<p>&lt;html&gt; &lt;head&gt; &lt;meta content=“text/html; charset=UTF-8” …\n"]]}}